{"mappings":"AAIA,MAAMA,SAAYC,IAGhB,IAAIC,EAGJ,MAAO,IAAIC,KAGLD,GACFE,qBAAqBF,GAIvBA,EAAQG,uBAAsB,KAG5BJ,KAAME,EAAA,GACR,CAEF,EAMIG,YAAc,KAClB,IAAIC,EAAOC,OAAOC,SAAWC,SAASC,KAAKC,aAAeJ,OAAOK,aAAe,IAChFH,SAASI,gBAAgBC,aAAa,QAAS,gBAAgBR,IAAM,EAKvEG,SAASM,iBAAiB,SAAUhB,SAASM,aAAc,CAAEW,SAAS,IAGtEX","sources":["scripts/boat.js"],"sourcesContent":["\r\n//Debouncer and scroll code taken from: https://css-tricks.com/styling-based-on-scroll-position/\r\n\r\n// The debounce function receives our function as a parameter\r\nconst debounce = (fn) => {\r\n\r\n  // This holds the requestAnimationFrame reference, so we can cancel it if we wish\r\n  let frame;\r\n\r\n  // The debounce function returns a new function that can receive a variable number of arguments\r\n  return (...params) => {\r\n    \r\n    // If the frame variable has been defined, clear it now, and queue for next frame\r\n    if (frame) { \r\n      cancelAnimationFrame(frame);\r\n    }\r\n\r\n    // Queue our function call for the next frame\r\n    frame = requestAnimationFrame(() => {\r\n      \r\n      // Call our function and pass any params we received\r\n      fn(...params);\r\n    });\r\n\r\n  } \r\n};\r\n\r\n\r\n// Reads out the scroll position and stores it in the data attribute\r\n// so we can use it in our stylesheets\r\nconst storeScroll = () => {\r\n  let perc = window.scrollY / (document.body.clientHeight - window.innerHeight) * 100;\r\n  document.documentElement.setAttribute('style', `--scrollpos: ${perc}`);\r\n  \r\n}\r\n\r\n// Listen for new scroll events, here we debounce our `storeScroll` function\r\ndocument.addEventListener('scroll', debounce(storeScroll), { passive: true });\r\n\r\n// Update scroll position for first time\r\nstoreScroll();"],"names":["debounce","fn","frame","params","cancelAnimationFrame","requestAnimationFrame","storeScroll","perc","window","scrollY","document","body","clientHeight","innerHeight","documentElement","setAttribute","addEventListener","passive"],"version":3,"file":"index.cfa19a21.js.map"}